/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventarios;
import alertas.principal.ErrorAlert;
import alertas.principal.SuccessAlert;
import cafeteria.OpcionesAl;
import paneles.JasperCompilerManager;
import paneles.*;
import java.awt.Color;
import java.awt.Font;
import java.util.Date;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperReport;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import lista_productos_servicios.Producto;
import lista_productos_servicios.ProductoDAO;
import net.proteanit.sql.DbUtils;
import principal.GenerarCodigos;
/**
 *
 * @author Rojeru San
 */
public class almacen extends javax.swing.JInternalFrame {
Connection con=null;
Date dato = null;
ResultSet rs=null;
PreparedStatement pst=null;
    static Conexion cc = new Conexion();
    static Connection cn = cc.ConnectDB();
    static PreparedStatement ps;
    ProductoDAO pdao = new ProductoDAO();
     DefaultTableModel modelo = new DefaultTableModel();
    String idp;
    int cant;
    /**
     * Creates new form NewJInternalFrame
     */
    public almacen() {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        con= Conexion.ConnectDB();
        Get_Data();
        tableUsers.getTableHeader().setFont(new Font("Tahoma", 1, 16));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cerrar = new principal.MaterialButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        pnlChange = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        c_search_tbl = new app.bolivia.swing.JCTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnsave = new rsbuttom.RSButtonMetro();
        btnUpdate = new rsbuttom.RSButtonMetro();
        btncancel = new rsbuttom.RSButtonMetro();
        btnDelete = new rsbuttom.RSButtonMetro();
        jLabel14 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        txtproveedor = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtcantidad = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtutilidad = new javax.swing.JTextField();
        txtproducto = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        pnlChange1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        cmbunidad = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        btnasignar = new rsbuttom.RSButtonMetro();
        jPanel12 = new javax.swing.JPanel();
        btnCancelar = new principal.MaterialButton();
        btnenviar = new principal.MaterialButton();
        quitar = new principal.MaterialButton();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_almacen = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder1 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder1.setShowLeftShadow(true);
        dropShadowBorder1.setShowTopShadow(true);
        setBorder(dropShadowBorder1);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 111, 177));

        cerrar.setBackground(new java.awt.Color(255, 255, 255));
        cerrar.setForeground(new java.awt.Color(58, 159, 171));
        cerrar.setText("X");
        cerrar.setToolTipText("<html> <head> <style> #contenedor{background:white;color:black; padding-left:10px;padding-right:10px;margin:0; padding-top:5px;padding-bottom:5px;} </style> </head> <body> <h4 id=\"contenedor\">Cerrar</h4> </body> </html>");
        cerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cerrar.setFont(new java.awt.Font("Roboto Medium", 1, 20)); // NOI18N
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Inventario");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/productos/productos.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jPanel10.setLayout(new java.awt.CardLayout());

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setPreferredSize(new java.awt.Dimension(769, 582));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(128, 128, 131));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Almac√©n");

        pnlChange.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        c_search_tbl.setBackground(new java.awt.Color(204, 204, 204));
        c_search_tbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        c_search_tbl.setForeground(new java.awt.Color(0, 0, 0));
        c_search_tbl.setToolTipText("");
        c_search_tbl.setCaretColor(new java.awt.Color(0, 0, 0));
        c_search_tbl.setFocusCycleRoot(true);
        c_search_tbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        c_search_tbl.setInheritsPopupMenu(true);
        c_search_tbl.setPlaceholder("Buscar Producto");
        c_search_tbl.setPreferredSize(new java.awt.Dimension(300, 32));
        c_search_tbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_search_tblActionPerformed(evt);
            }
        });
        c_search_tbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                c_search_tblKeyReleased(evt);
            }
        });
        jPanel5.add(c_search_tbl);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        tableUsers.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellidos", "Domicilio", "Telefono"
            }
        ));
        tableUsers.setGridColor(new java.awt.Color(255, 255, 255));
        tableUsers.setRowHeight(20);
        tableUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableUsers);

        javax.swing.GroupLayout pnlChangeLayout = new javax.swing.GroupLayout(pnlChange);
        pnlChange.setLayout(pnlChangeLayout);
        pnlChangeLayout.setHorizontalGroup(
            pnlChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChangeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1056, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChangeLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1030, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlChangeLayout.setVerticalGroup(
            pnlChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChangeLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(384, Short.MAX_VALUE))
            .addGroup(pnlChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlChangeLayout.createSequentialGroup()
                    .addGap(84, 84, 84)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.add(jPanel11, "card2");

        jTabbedPane2.addTab("Productos", jPanel10);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jPanel3.setInheritsPopupMenu(true);
        jPanel3.setPreferredSize(new java.awt.Dimension(769, 582));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(607, 40));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(607, 40));

        btnsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save_32.png"))); // NOI18N
        btnsave.setText("Guardar");
        btnsave.setToolTipText("");
        btnsave.setColorHover(new java.awt.Color(12, 140, 143));
        btnsave.setColorPressed(new java.awt.Color(12, 140, 143));
        btnsave.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnsave.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnsave.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnsave.setIconTextGap(10);
        btnsave.setPreferredSize(new java.awt.Dimension(150, 32));
        btnsave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnsaveMouseClicked(evt);
            }
        });
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update_32.png"))); // NOI18N
        btnUpdate.setText("Editar");
        btnUpdate.setToolTipText("");
        btnUpdate.setColorHover(new java.awt.Color(12, 140, 143));
        btnUpdate.setColorPressed(new java.awt.Color(12, 140, 143));
        btnUpdate.setEnabled(false);
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnUpdate.setHideActionText(true);
        btnUpdate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnUpdate.setIconTextGap(10);
        btnUpdate.setPreferredSize(new java.awt.Dimension(150, 32));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btncancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/new_32.png"))); // NOI18N
        btncancel.setText("Limpiar");
        btncancel.setToolTipText("");
        btncancel.setColorHover(new java.awt.Color(12, 140, 143));
        btncancel.setColorPressed(new java.awt.Color(12, 140, 143));
        btncancel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btncancel.setHideActionText(true);
        btncancel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btncancel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btncancel.setIconTextGap(10);
        btncancel.setPreferredSize(new java.awt.Dimension(150, 32));
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete_32.png"))); // NOI18N
        btnDelete.setText("Eliminar");
        btnDelete.setToolTipText("");
        btnDelete.setColorHover(new java.awt.Color(12, 140, 143));
        btnDelete.setColorPressed(new java.awt.Color(12, 140, 143));
        btnDelete.setEnabled(false);
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnDelete.setHideActionText(true);
        btnDelete.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnDelete.setIconTextGap(10);
        btnDelete.setPreferredSize(new java.awt.Dimension(150, 32));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel7, new java.awt.GridBagConstraints());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(128, 128, 131));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Almac√©n");

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setForeground(new java.awt.Color(0, 0, 0));
        jPanel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel9.setLayout(new java.awt.GridBagLayout());

        txtproveedor.setBackground(new java.awt.Color(204, 204, 204));
        txtproveedor.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtproveedor.setForeground(new java.awt.Color(0, 0, 0));
        txtproveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproveedorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 41, 0, 61);
        jPanel9.add(txtproveedor, gridBagConstraints);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Proveedor: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 92, 0, 0);
        jPanel9.add(jLabel24, gridBagConstraints);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Precio Compra:");
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(41, 42, 0, 0);
        jPanel9.add(jLabel25, gridBagConstraints);

        txtPrecio.setBackground(new java.awt.Color(255, 255, 255));
        txtPrecio.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtPrecio.setForeground(new java.awt.Color(0, 0, 0));
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 41, 0, 61);
        jPanel9.add(txtPrecio, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Cantidad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(44, 108, 0, 0);
        jPanel9.add(jLabel18, gridBagConstraints);

        txtcantidad.setBackground(new java.awt.Color(255, 255, 255));
        txtcantidad.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtcantidad.setForeground(new java.awt.Color(0, 0, 0));
        txtcantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcantidadActionPerformed(evt);
            }
        });
        txtcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 41, 0, 61);
        jPanel9.add(txtcantidad, gridBagConstraints);

        txtDescripcion.setBackground(new java.awt.Color(204, 204, 204));
        txtDescripcion.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 39;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 41, 80, 0);
        jPanel9.add(txtDescripcion, gridBagConstraints);

        txtutilidad.setBackground(new java.awt.Color(255, 255, 255));
        txtutilidad.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtutilidad.setForeground(new java.awt.Color(0, 0, 0));
        txtutilidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtutilidadKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 41, 0, 0);
        jPanel9.add(txtutilidad, gridBagConstraints);

        txtproducto.setBackground(new java.awt.Color(255, 255, 255));
        txtproducto.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtproducto.setForeground(new java.awt.Color(0, 0, 0));
        txtproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproductoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 41, 0, 0);
        jPanel9.add(txtproducto, gridBagConstraints);

        txtCodigo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(0, 0, 0));
        txtCodigo.setEnabled(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 41, 0, 0);
        jPanel9.add(txtCodigo, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Codigo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 150, 0, 0);
        jPanel9.add(jLabel17, gridBagConstraints);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Producto: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(41, 128, 0, 0);
        jPanel9.add(jLabel23, gridBagConstraints);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("% de Utilidad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(44, 93, 0, 0);
        jPanel9.add(jLabel26, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Descripci√≥n:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 113, 0, 0);
        jPanel9.add(jLabel19, gridBagConstraints);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Nuevo Producto", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        pnlChange1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        cmbunidad.setBackground(new java.awt.Color(255, 255, 255));
        cmbunidad.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cmbunidad.setForeground(new java.awt.Color(0, 0, 0));
        cmbunidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ambulancia", "Cirug√≠a", "Emergencia", "Endoscopia", "Hospitalizaci√≥n", "Laboratorio", "RayosX", "Ultrasonido" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 49;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 6, 0, 0);
        jPanel8.add(cmbunidad, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Elegir Unidad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 294, 0, 0);
        jPanel8.add(jLabel20, gridBagConstraints);

        btnasignar.setText("Buscar Productos");
        btnasignar.setToolTipText("");
        btnasignar.setColorHover(new java.awt.Color(12, 140, 143));
        btnasignar.setColorPressed(new java.awt.Color(12, 140, 143));
        btnasignar.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnasignar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnasignar.setIconTextGap(10);
        btnasignar.setPreferredSize(new java.awt.Dimension(150, 32));
        btnasignar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnasignarMouseClicked(evt);
            }
        });
        btnasignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnasignarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 0, 275);
        jPanel8.add(btnasignar, gridBagConstraints);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder2 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder2.setShowLeftShadow(true);
        dropShadowBorder2.setShowTopShadow(true);
        jPanel12.setBorder(dropShadowBorder2);

        btnCancelar.setBackground(new java.awt.Color(0, 111, 177));
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("LIMPIAR");
        btnCancelar.setToolTipText("");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnenviar.setBackground(new java.awt.Color(0, 111, 177));
        btnenviar.setForeground(new java.awt.Color(255, 255, 255));
        btnenviar.setText("          Enviar Productos          ");
        btnenviar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnenviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnenviarActionPerformed(evt);
            }
        });

        quitar.setBackground(new java.awt.Color(0, 111, 177));
        quitar.setForeground(new java.awt.Color(255, 255, 255));
        quitar.setText("QUITAR");
        quitar.setToolTipText("<html> <head> <style> #contenedor{background:#3A9FAB;color:white; padding-left:10px;padding-right:10px;margin:0; padding-top:5px;padding-bottom:5px;} </style> </head> <body> <h4 id=\"contenedor\">Quitar</h4> </body> </html>");
        quitar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quitar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnenviar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quitar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnenviar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quitar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel13.setBackground(new java.awt.Color(0, 111, 177));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 111, 177), 3));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        tabla_almacen.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tabla_almacen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto", "Precio", "Descripci√≥n", "Cantidad"
            }
        ));
        tabla_almacen.setGridColor(new java.awt.Color(255, 255, 255));
        tabla_almacen.setRowHeight(20);
        tabla_almacen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_almacenMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_almacen);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlChange1Layout = new javax.swing.GroupLayout(pnlChange1);
        pnlChange1.setLayout(pnlChange1Layout);
        pnlChange1Layout.setHorizontalGroup(
            pnlChange1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 1068, Short.MAX_VALUE)
            .addGroup(pnlChange1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlChange1Layout.setVerticalGroup(
            pnlChange1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChange1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(pnlChange1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(128, 128, 131));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Almac√©n");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlChange1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlChange1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Distrubuir Inventario", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("");
        jTabbedPane2.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(jPanel1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String id="";
//metodo para obtener el maximo id y asignar id a la tabla almacen
    public void extraerID() {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_almacen) FROM almacen";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                txtCodigo.setText("PA0001");
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                txtCodigo.setText("PA" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //metodo para obtener el maximo id y asignar id a la tabla ambulancia
    public String extraerID_ambulancia(String id) {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_ambulancia) FROM inventario_ambulancia";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                id = "IA0001";
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                id = ("IA" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
            return id;
    }
        //metodo guardar productos en el inventario de ambulancia
    private void ingresar_inventario_ambulancia(){
    for (int i = 0; i <tabla_almacen.getRowCount(); i++) {
        String producto= tabla_almacen.getModel().getValueAt(i, 1).toString();
        String precio= tabla_almacen.getModel().getValueAt(i, 2).toString();
        String descripcion= tabla_almacen.getModel().getValueAt(i, 3).toString();
        String cantidad= tabla_almacen.getModel().getValueAt(i, 4).toString();
        String sql= "insert into inventario_ambulancia( "
                + "codigo_ambulancia,"
                + "nombre,"
                + "precio,"
                + "descripcion,"
                + "cantidad) values ('"
                +extraerID_ambulancia(id)+"','" 
                + producto +"','" 
                +precio+"','" 
                +descripcion+"','" 
                +cantidad+ "')";

        try{
            con=Conexion.ConnectDB();
            pst=con.prepareStatement(sql);
            pst.execute();
            }catch(HeadlessException | SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
    }
         }
     //metodo para obtener el maximo id y asignar id a la tabla cirugia
    public String extraerID_cirugia(String id) {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_cirugia) FROM inventario_cirugia";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                id = "IC0001";
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                id = ("IC" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
            return id;
    }
        //metodo guardar productos en el inventario de cirugia
    private void ingresar_inventario_cirugia(){
    for (int i = 0; i <tabla_almacen.getRowCount(); i++) {
        String producto= tabla_almacen.getModel().getValueAt(i, 1).toString();
        String precio= tabla_almacen.getModel().getValueAt(i, 2).toString();
        String descripcion= tabla_almacen.getModel().getValueAt(i, 3).toString();
        String cantidad= tabla_almacen.getModel().getValueAt(i, 4).toString();
        String sql= "insert into inventario_cirugia( "
                + "codigo_cirugia,"
                + "nombre,"
                + "precio,"
                + "descripcion,"
                + "cantidad) values ('"
                +extraerID_cirugia(id)+"','" 
                + producto +"','" 
                +precio+"','" 
                +descripcion+"','" 
                +cantidad+ "')";

        try{
            con=Conexion.ConnectDB();
            pst=con.prepareStatement(sql);
            pst.execute();
            }catch(HeadlessException | SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
    }
         }
         //metodo para obtener el maximo id y asignar id a la tabla Emergencia
    public String extraerID_Emergencia(String id) {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_emergencia) FROM inventario_emergencia";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                id = "PE0001";
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                id = ("PE" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
            return id;
    }
        //metodo guardar productos en el inventario de Emergencia
    private void ingresar_inventario_Emergencia(){
    for (int i = 0; i <tabla_almacen.getRowCount(); i++) {
        String producto= tabla_almacen.getModel().getValueAt(i, 1).toString();
        String precio= tabla_almacen.getModel().getValueAt(i, 2).toString();
        String descripcion= tabla_almacen.getModel().getValueAt(i, 3).toString();
        String cantidad= tabla_almacen.getModel().getValueAt(i, 4).toString();
        String sql= "insert into inventario_emergencia( "
                + "codigo_emergencia,"
                + "nombre,"
                + "precio,"
                + "descripcion,"
                + "cantidad) values ('"
                +extraerID_Emergencia(id)+"','" 
                + producto +"','" 
                +precio+"','" 
                +descripcion+"','" 
                +cantidad+ "')";

        try{
            con=Conexion.ConnectDB();
            pst=con.prepareStatement(sql);
            pst.execute();
            }catch(HeadlessException | SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
    }
         }
     //metodo para obtener el maximo id y asignar id a la tabla Endoscopia
    public String extraerID_Endoscopia(String id) {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_endoscopia) FROM inventario_endoscopia";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                id = "IE0001";
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                id = ("IE" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
            return id;
    }
        //metodo guardar productos en el inventario de Emergencia
    private void ingresar_inventario_Endoscopia(){
    for (int i = 0; i <tabla_almacen.getRowCount(); i++) {
        String producto= tabla_almacen.getModel().getValueAt(i, 1).toString();
        String precio= tabla_almacen.getModel().getValueAt(i, 2).toString();
        String descripcion= tabla_almacen.getModel().getValueAt(i, 3).toString();
        String cantidad= tabla_almacen.getModel().getValueAt(i, 4).toString();
        String sql= "insert into inventario_endoscopia( "
                + "codigo_endoscopia,"
                + "nombre,"
                + "precio,"
                + "descripcion,"
                + "cantidad) values ('"
                +extraerID_Endoscopia(id)+"','" 
                + producto +"','" 
                +precio+"','" 
                +descripcion+"','" 
                +cantidad+ "')";

        try{
            con=Conexion.ConnectDB();
            pst=con.prepareStatement(sql);
            pst.execute();
            }catch(HeadlessException | SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
    }
         }
    //metodo para obtener el maximo id y asignar id a la tabla Hospitalizaci√≥n
    public String extraerID_Hospitalizaci√≥n(String id) {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_hospitalizacion) FROM inventario_hospitalizacion";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                id = "IH0001";
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                id = ("IH" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
            return id;
    }
        //metodo guardar productos en el inventario de Hospitalizaci√≥n
    private void ingresar_inventario_Hospitalizaci√≥n(){
    for (int i = 0; i <tabla_almacen.getRowCount(); i++) {
        String producto= tabla_almacen.getModel().getValueAt(i, 1).toString();
        String precio= tabla_almacen.getModel().getValueAt(i, 2).toString();
        String descripcion= tabla_almacen.getModel().getValueAt(i, 3).toString();
        String cantidad= tabla_almacen.getModel().getValueAt(i, 4).toString();
        String sql= "insert into inventario_hospitalizacion( "
                + "codigo_hospitalizacion,"
                + "nombre,"
                + "precio,"
                + "descripcion,"
                + "cantidad) values ('"
                +extraerID_Hospitalizaci√≥n(id)+"','" 
                + producto +"','" 
                +precio+"','" 
                +descripcion+"','" 
                +cantidad+ "')";

        try{
            con=Conexion.ConnectDB();
            pst=con.prepareStatement(sql);
            pst.execute();
            }catch(HeadlessException | SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
    }
         }
    //metodo para obtener el maximo id y asignar id a la tabla Laboratorio
    public String extraerID_Laboratorio(String id) {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_laboratorio) FROM inventario_laboratorio";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                id = "PL0001";
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                id = ("PL" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
            return id;
    }
        //metodo guardar productos en el inventario de Laboratorio
    private void ingresar_inventario_Laboratorio(){
    for (int i = 0; i <tabla_almacen.getRowCount(); i++) {
        String producto= tabla_almacen.getModel().getValueAt(i, 1).toString();
        String precio= tabla_almacen.getModel().getValueAt(i, 2).toString();
        String descripcion= tabla_almacen.getModel().getValueAt(i, 3).toString();
        String cantidad= tabla_almacen.getModel().getValueAt(i, 4).toString();
        String sql= "insert into inventario_laboratorio( "
                + "codigo_laboratorio,"
                + "nombre,"
                + "precio,"
                + "descripcion,"
                + "cantidad) values ('"
                +extraerID_Laboratorio(id)+"','" 
                + producto +"','" 
                +precio+"','" 
                +descripcion+"','" 
                +cantidad+ "')";

        try{
            con=Conexion.ConnectDB();
            pst=con.prepareStatement(sql);
            pst.execute();
            }catch(HeadlessException | SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
    }
         }
    //metodo para obtener el maximo id y asignar id a la tabla RayosX
    public String extraerID_RayosX(String id) {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_rayosx) FROM inventario_rayosx";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                id = "IR0001";
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                id = ("IR" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
            return id;
    }
        //metodo guardar productos en el inventario de RayosX
    private void ingresar_inventario_RayosX(){
    for (int i = 0; i <tabla_almacen.getRowCount(); i++) {
        String producto= tabla_almacen.getModel().getValueAt(i, 1).toString();
        String precio= tabla_almacen.getModel().getValueAt(i, 2).toString();
        String descripcion= tabla_almacen.getModel().getValueAt(i, 3).toString();
        String cantidad= tabla_almacen.getModel().getValueAt(i, 4).toString();
        String sql= "insert into inventario_rayosx( "
                + "codigo_rayosx,"
                + "nombre,"
                + "precio,"
                + "descripcion,"
                + "cantidad) values ('"
                +extraerID_Laboratorio(id)+"','" 
                + producto +"','" 
                +precio+"','" 
                +descripcion+"','" 
                +cantidad+ "')";

        try{
            con=Conexion.ConnectDB();
            pst=con.prepareStatement(sql);
            pst.execute();
            }catch(HeadlessException | SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
    }
         }
     //metodo para obtener el maximo id y asignar id a la tabla Ultrasonido
    public String extraerID_Ultrasonido(String id) {
        int j;
        int cont = 1;
        String num = "";
        String c = "";
        String SQL = "SELECT MAX(codigo_ultrasonido) FROM inventario_ultrasonido";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                c = rs.getString(1);
            }

            if (c == null) {
                id = "IU0001";
            } else {
                char r1 = c.charAt(2);
                char r2 = c.charAt(3);
                char r3 = c.charAt(4);
                char r4 = c.charAt(5);
                String r = "";
                r = "" + r1 + r2 + r3 + r4;
                j = Integer.parseInt(r);
                GenerarCodigos gen = new GenerarCodigos();
                gen.generar(j);
                id = ("IU" + gen.serie());

            }

        } catch (SQLException ex) {
            Logger.getLogger(OpcionesAl.class.getName()).log(Level.SEVERE, null, ex);
        }
            return id;
    }
        //metodo guardar productos en el inventario de Ultrasonido
    private void ingresar_inventario_Ultrasonido(){
    for (int i = 0; i <tabla_almacen.getRowCount(); i++) {
        String producto= tabla_almacen.getModel().getValueAt(i, 1).toString();
        String precio= tabla_almacen.getModel().getValueAt(i, 2).toString();
        String descripcion= tabla_almacen.getModel().getValueAt(i, 3).toString();
        String cantidad= tabla_almacen.getModel().getValueAt(i, 4).toString();
        String sql= "insert into inventario_ultrasonido( "
                + "codigo_ultrasonido,"
                + "nombre,"
                + "precio,"
                + "descripcion,"
                + "cantidad) values ('"
                +extraerID_Laboratorio(id)+"','" 
                + producto +"','" 
                +precio+"','" 
                +descripcion+"','" 
                +cantidad+ "')";

        try{
            con=Conexion.ConnectDB();
            pst=con.prepareStatement(sql);
            pst.execute();
            }catch(HeadlessException | SQLException ex){
                JOptionPane.showMessageDialog(this,ex);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null,e.getMessage());}
    }
         }
    //metodo actualizar stock de ambulancia
        void editStock_almacen() {
        for (int i = 0; i < tabla_almacen.getRowCount(); i++) {
            Producto pr = new Producto();
            idp = tabla_almacen.getValueAt(i, 0).toString();
            cant = Integer.parseInt(tabla_almacen.getValueAt(i, 4).toString());
            pr = pdao.listarID_almacen(idp);
            int sa = pr.getStock() - cant;
            pdao.actualizarStock_almacen(sa, idp);
        }
    }
        
    //metodo obtener data de la tabla almacen
    private void Get_Data(){
        Reset();
        String sql="select codigo_almacen as 'Codigo',"
                + "producto as 'Producto', "
                + "proveedor as 'Proveedor', "
                + "precio_compra as 'Precio de Compra', "
                + "utilidad as 'Margen de Utilidad', "
                + "precio_venta as 'Precio de Venta', "
                + "cantidad as 'Cantidad Disponible', "
                + "descripcion as 'Descripci√≥n' "
                + "from almacen";
        try{
         pst=con.prepareStatement(sql); 
          rs= pst.executeQuery();
         tableUsers.setModel(DbUtils.resultSetToTableModel(rs));
        tableUsers.removeColumn(tableUsers.getColumnModel().getColumn(0));
        lista_productos_servicios.ColorearFilas colorear=new lista_productos_servicios.ColorearFilas(3);
       tableUsers.setDefaultRenderer (Object.class, colorear);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);}
  }
    //metodo limpiar cajas de texto
    private void Reset()
{
    DefaultTableModel modelo = (DefaultTableModel) tabla_almacen.getModel();

        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    txtCodigo.setText("");
    txtproducto.setText("");
    txtproveedor.setText("");
    txtutilidad.setText("");
    txtDescripcion.setText("");
    txtPrecio.setText("");
    txtcantidad.setText("");
    btnsave.setEnabled(true);
    btncancel.setEnabled(true);
    btnUpdate.setEnabled(false);
    btnDelete.setEnabled(false);
    extraerID();
}
    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cerrarActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try
        {
            int P = JOptionPane.showConfirmDialog(null," Seguro que quiere borrarlo ?","Confirmaci√≥n",JOptionPane.YES_NO_OPTION);
            if (P==0)
            {
                con=Conexion.ConnectDB();

                String sql= "delete from almacen where codigo_almacen= '" + txtCodigo.getText() + "'";
                pst=con.prepareStatement(sql);
                //        pst.execute();
                //         String sql1= "delete from Users where Username = '" + txtUserName.getText() + "'";
                //        pst=con.prepareStatement(sql1);
                pst.execute();
                JOptionPane.showMessageDialog(this,"Borrado Exitosamente","Registro",JOptionPane.INFORMATION_MESSAGE);
                this.jTabbedPane2.setSelectedIndex(0);
                Get_Data();
                Reset();
            }
        }catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        Reset();   // TODO add your handling code here:
    }//GEN-LAST:event_btncancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        //formula para calcular el precio de compra
            double precio=0.0;
            precio= Double.parseDouble(txtPrecio.getText())* (1+ (Double.parseDouble(txtutilidad.getText()))/100);
        try{
            con=Conexion.ConnectDB();
            String sql= "update almacen set producto='"+ txtproducto.getText()
                    + "',proveedor='" + txtproveedor.getText() 
                    + "',precio_compra='" + txtPrecio.getText() 
                    + "',utilidad='" + txtutilidad.getText() 
                    + "',precio_venta='" + precio
                    +"',cantidad='" + txtcantidad.getText() 
                    + "',descripcion='" + txtDescripcion.getText()
                    + "' where codigo_almacen='" + txtCodigo.getText()+ "'";
            pst=con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this,"Producto Actualizado","Almacen",JOptionPane.INFORMATION_MESSAGE);
            btnUpdate.setEnabled(false);
            this.jTabbedPane2.setSelectedIndex(0);
            Get_Data();
            Reset();

        }catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        try{
            con=Conexion.ConnectDB();
            if (txtproducto.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Ingrese Nombre del Producto","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtPrecio.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Ingrese Precio de Compra","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }if (txtutilidad.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Ingrese % de Utilidad","Error", JOptionPane.ERROR_MESSAGE);
                return;
            } if (txtcantidad.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Ingrese la Cantidad de Compra","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            //formula para calcular el precio de compra
            double precio=0.0;
            precio= Double.parseDouble(txtPrecio.getText())* (1+ (Double.parseDouble(txtutilidad.getText()))/100);
            // String Password1= String.valueOf(txtPassword.getText());
            String sql= "insert into almacen(codigo_almacen,"
            + "producto,"
            + "proveedor,"
            + "precio_compra,"
            + "utilidad,"
            + "precio_venta,"
            + "cantidad,"
            + "descripcion"
            + ") values ('"
            +txtCodigo.getText()+"','" 
            +txtproducto.getText()+"','" 
            + txtproveedor.getText() +"','" 
            + txtPrecio.getText() +"','" 
            + txtutilidad.getText() +"','" 
            + precio +"','" 
            + txtcantidad.getText() +"','" 
            +txtDescripcion.getText()+ "')";

            pst=con.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(this,"Registrado con √©xito","Almacen",JOptionPane.INFORMATION_MESSAGE);
            btnsave.setEnabled(false);
            this.jTabbedPane2.setSelectedIndex(0);
            Get_Data();
        }catch(HeadlessException | SQLException ex){
            JOptionPane.showMessageDialog(this,ex);
        } // TODO add your handling code here:
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnsaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsaveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsaveMouseClicked

    private void tableUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUsersMouseClicked
        try {
            con=Conexion.ConnectDB();
            int row= tableUsers.getSelectedRow();
            txtCodigo.setText(tableUsers.getModel().getValueAt(row,0).toString());
            txtproducto.setText(tableUsers.getModel().getValueAt(row,1).toString());
            txtproveedor.setText(tableUsers.getModel().getValueAt(row,2).toString());
            txtPrecio.setText(tableUsers.getModel().getValueAt(row,3).toString());
            txtutilidad.setText(tableUsers.getModel().getValueAt(row,4).toString());
            txtcantidad.setText(tableUsers.getModel().getValueAt(row,6).toString());
            txtDescripcion.setText(tableUsers.getModel().getValueAt(row,7).toString());

            this.btnsave.setEnabled(false);
            this.btnDelete.setEnabled(true);
            this.btnUpdate.setEnabled(true);
            this.btncancel.setEnabled(false);
            this.jTabbedPane2.setSelectedIndex(1);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tableUsersMouseClicked

    private void c_search_tblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c_search_tblKeyReleased
        // search btn code
        String name = c_search_tbl.getText();
        try {

            DefaultTableModel dt = (DefaultTableModel) tableUsers.getModel();
            dt.setRowCount(0);
            Statement s = Conexion.ConnectDB().createStatement();

            ResultSet rs = s.executeQuery("SELECT * FROM almacen WHERE producto LIKE '%"+name+"%' ");

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
                dt.addRow(v);

            }

        } catch (Exception e) {
            Get_Data();

        }          // TODO add your handling code here:
    }//GEN-LAST:event_c_search_tblKeyReleased

    private void c_search_tblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_search_tblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_search_tblActionPerformed

    private void txtproveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproveedorActionPerformed

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9') && (car<'.' || car>'.')) evt.consume();      // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtcantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcantidadActionPerformed

    private void txtcantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();          // TODO add your handling code here:
    }//GEN-LAST:event_txtcantidadKeyTyped

    private void txtutilidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtutilidadKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9') && (car<'.' || car>'.')) evt.consume();         // TODO add your handling code here:
    }//GEN-LAST:event_txtutilidadKeyTyped

    private void txtproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproductoActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void tabla_almacenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_almacenMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_almacenMouseClicked

    private void btnasignarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnasignarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnasignarMouseClicked

    private void btnasignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnasignarActionPerformed
        new lista_productos_servicios.productos_almacen(new JFrame(), true).setVisible(true);                // TODO add your handling code here:
    }//GEN-LAST:event_btnasignarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Reset();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnenviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnenviarActionPerformed
        if (this.tabla_almacen.getRowCount() < 1) {
            ErrorAlert er = new ErrorAlert(new JFrame(), true);
            er.titulo.setText("OOPS...");
            er.msj.setText("IMPOSIBLE INGRESAR");
            er.msj1.setText("REGISTRO");
            er.setVisible(true);
        }else{
            if ("Ambulancia".equals(cmbunidad.getSelectedItem())){
                editStock_almacen();
                ingresar_inventario_ambulancia();
                Get_Data();
                SuccessAlert sa = new SuccessAlert(new JFrame(), true);
                sa.titulo.setText("¬°HECHO!");
                sa.msj.setText("GUARDADO");
                sa.msj1.setText("CON √âXITO");
                sa.setVisible(true);
            }else if ("Cirug√≠a".equals(cmbunidad.getSelectedItem())){
                editStock_almacen();
                ingresar_inventario_cirugia();
                Get_Data();
                SuccessAlert sa = new SuccessAlert(new JFrame(), true);
                sa.titulo.setText("¬°HECHO!");
                sa.msj.setText("GUARDADO");
                sa.msj1.setText("CON √âXITO");
                sa.setVisible(true);
            }else if ("Emergencia".equals(cmbunidad.getSelectedItem())){
                editStock_almacen();
                ingresar_inventario_Emergencia();
                Get_Data();
                SuccessAlert sa = new SuccessAlert(new JFrame(), true);
                sa.titulo.setText("¬°HECHO!");
                sa.msj.setText("GUARDADO");
                sa.msj1.setText("CON √âXITO");
                sa.setVisible(true);
            }else if ("Endoscopia".equals(cmbunidad.getSelectedItem())){
                editStock_almacen();
                ingresar_inventario_Endoscopia();
                Get_Data();
                SuccessAlert sa = new SuccessAlert(new JFrame(), true);
                sa.titulo.setText("¬°HECHO!");
                sa.msj.setText("GUARDADO");
                sa.msj1.setText("CON √âXITO");
                sa.setVisible(true);
            }else if ("Hospitalizaci√≥n".equals(cmbunidad.getSelectedItem())){
                editStock_almacen();
                ingresar_inventario_Hospitalizaci√≥n();
                Get_Data();
                SuccessAlert sa = new SuccessAlert(new JFrame(), true);
                sa.titulo.setText("¬°HECHO!");
                sa.msj.setText("GUARDADO");
                sa.msj1.setText("CON √âXITO");
                sa.setVisible(true);
            }else if ("Laboratorio".equals(cmbunidad.getSelectedItem())){
                editStock_almacen();
                ingresar_inventario_Laboratorio();
                Get_Data();
                SuccessAlert sa = new SuccessAlert(new JFrame(), true);
                sa.titulo.setText("¬°HECHO!");
                sa.msj.setText("GUARDADO");
                sa.msj1.setText("CON √âXITO");
                sa.setVisible(true);
            }else if ("RayosX".equals(cmbunidad.getSelectedItem())){
                editStock_almacen();
                ingresar_inventario_RayosX();
                Get_Data();
                SuccessAlert sa = new SuccessAlert(new JFrame(), true);
                sa.titulo.setText("¬°HECHO!");
                sa.msj.setText("GUARDADO");
                sa.msj1.setText("CON √âXITO");
                sa.setVisible(true);
            }else if ("Ultrasonido".equals(cmbunidad.getSelectedItem())){
                editStock_almacen();
                ingresar_inventario_Ultrasonido();
                Get_Data();
                SuccessAlert sa = new SuccessAlert(new JFrame(), true);
                sa.titulo.setText("¬°HECHO!");
                sa.msj.setText("GUARDADO");
                sa.msj1.setText("CON √âXITO");
                sa.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnenviarActionPerformed

    private void quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) this.tabla_almacen.getModel();
        if (modelo.getRowCount() > 0) {

            int fila = this.tabla_almacen.getSelectedRow();
            if (this.tabla_almacen.getSelectedRowCount() < 1) {
                ErrorAlert er = new ErrorAlert(new JFrame(), true);
                er.titulo.setText("OOPS...");
                er.msj.setText("SELECCIONA UN");
                er.msj1.setText("REGISTRO");
                er.setVisible(true);
            } else {
                modelo.removeRow(fila);
            }
        }
    }//GEN-LAST:event_quitarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private principal.MaterialButton btnCancelar;
    private rsbuttom.RSButtonMetro btnDelete;
    private rsbuttom.RSButtonMetro btnUpdate;
    private rsbuttom.RSButtonMetro btnasignar;
    private rsbuttom.RSButtonMetro btncancel;
    private principal.MaterialButton btnenviar;
    private rsbuttom.RSButtonMetro btnsave;
    private app.bolivia.swing.JCTextField c_search_tbl;
    private principal.MaterialButton cerrar;
    private javax.swing.JComboBox cmbunidad;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JPanel pnlChange;
    private javax.swing.JPanel pnlChange1;
    private principal.MaterialButton quitar;
    public static javax.swing.JTable tabla_almacen;
    private javax.swing.JTable tableUsers;
    public javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescripcion;
    public javax.swing.JTextField txtPrecio;
    public javax.swing.JTextField txtcantidad;
    public javax.swing.JTextField txtproducto;
    public javax.swing.JTextField txtproveedor;
    public javax.swing.JTextField txtutilidad;
    // End of variables declaration//GEN-END:variables
}
